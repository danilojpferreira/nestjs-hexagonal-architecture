{
  "name": "@danilojpferreira/hexagonal-example",
  "version": "0.0.1",
  "description": "A example of hexagonal architecture with NestJS",
  "author": "Danilo Pereira<danilojpferreira@gmail.com>",
  "private": "false",
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "swagger": "ts-node ./src/generate-metadata.ts",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "start:dev": "nest start --watch",
    "start": "nest start",
    "test:cov": "jest --coverage",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test": "jest"
  },
  "dependencies": {
    "@faker-js/faker": "^9.2.0",
    "@nestjs/common": "^10.4.8",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.4.8",
    "@nestjs/cqrs": "^10.2.8",
    "@nestjs/microservices": "10.4.13",
    "@nestjs/platform-express": "^10.4.8",
    "@nestjs/swagger": "^8.0.7",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "reflect-metadata": "^0.2.2"
  },
  "devDependencies": {
    "@commitlint/cli": "19.6.0",
    "@commitlint/config-conventional": "19.6.0",
    "@nestjs/cli": "^10.4.7",
    "@nestjs/schematics": "^10.2.3",
    "@nestjs/testing": "^10.4.8",
    "@swc/cli": "^0.5.0",
    "@swc/core": "^1.9.2",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.9.0",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "7.6.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "9.1.7",
    "jest": "^29.5.0",
    "prettier": "3.4.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.6.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "coveragePathIgnorePatterns": [
      "src/generate-metadata.ts",
      "src/metadata.ts"
    ]
  }
}